// CodeMirror, copyright (c) by Marijn Haverbeke and others
// Distributed under an MIT license: http://codemirror.net/LICENSE

(function(mod) {
  if (typeof exports == "object" && typeof module == "object") // CommonJS
    mod(require("../../lib/codemirror"));
  else if (typeof define == "function" && define.amd) // AMD
    define(["../../lib/codemirror"], mod);
  else // Plain browser env
    mod(CodeMirror);
})(function(CodeMirror) {
  "use strict";

  var WORD = /[\w$]+/, RANGE = 500;

  CodeMirror.registerHelper("hint", "anyword", function(editor, options) {
    var word = options && options.word || WORD;
    var range = options && options.range || RANGE;
    var cur = editor.getCursor(), curLine = editor.getLine(cur.line);
    var end = cur.ch, start = end;
    while (start && word.test(curLine.charAt(start - 1))) --start;
    var curWord = start != end && curLine.slice(start, end);

    var list = [], seen = {};
	
	setSelectOptions(list,"acl");
	setSelectOptions(list,"aclEntry");
	setSelectOptions(list,"actualParameter");
	setSelectOptions(list,"application");
	setSelectOptions(list,"applicationDependency");
	setSelectOptions(list,"applicationTier");
	setSelectOptions(list,"artifact");
	setSelectOptions(list,"artifactVersion");
	setSelectOptions(list,"catalog");
	setSelectOptions(list,"catalogItem");
	setSelectOptions(list,"cluster");
	setSelectOptions(list,"component");
	setSelectOptions(list,"container");
	setSelectOptions(list,"credential");
	setSelectOptions(list,"dashboard");
	setSelectOptions(list,"deployerApplication");
	setSelectOptions(list,"deployerConfiguration");
	setSelectOptions(list,"deployerService");
	setSelectOptions(list,"directoryProvider");
	setSelectOptions(list,"emailConfig");
	setSelectOptions(list,"emailNotifier");
	setSelectOptions(list,"environment");
	setSelectOptions(list,"environmentMap");
	setSelectOptions(list,"environmentTemplate");
	setSelectOptions(list,"environmentTemplateTier");
	setSelectOptions(list,"environmentTemplateTierMap");
	setSelectOptions(list,"environmentTemplateTierMapping");
	setSelectOptions(list,"environmentTier");
	setSelectOptions(list,"environmentVariable");
	setSelectOptions(list,"formalParameter");
	setSelectOptions(list,"gate");
	setSelectOptions(list,"gateway");
	setSelectOptions(list,"group");
	setSelectOptions(list,"hook");
	setSelectOptions(list,"job");
	setSelectOptions(list,"jobStep");
	setSelectOptions(list,"license");
	setSelectOptions(list,"note");
	setSelectOptions(list,"pipeline");
	setSelectOptions(list,"plugin");
	setSelectOptions(list,"port");
	setSelectOptions(list,"procedure");
	setSelectOptions(list,"process");
	setSelectOptions(list,"processDependency");
	setSelectOptions(list,"processStep");
	setSelectOptions(list,"project");
	setSelectOptions(list,"property");
	setSelectOptions(list,"release");
	setSelectOptions(list,"report");
	setSelectOptions(list,"reportObjectAssociation");
	setSelectOptions(list,"reportObjectAttribute");
	setSelectOptions(list,"reportObjectType");
	setSelectOptions(list,"reportingFilter");
	setSelectOptions(list,"repository");
	setSelectOptions(list,"reservation");
	setSelectOptions(list,"resource");
	setSelectOptions(list,"resourcePool");
	setSelectOptions(list,"resourceTemplate");
	setSelectOptions(list,"rollingDeployPhase");
	setSelectOptions(list,"schedule");
	setSelectOptions(list,"service");
	setSelectOptions(list,"serviceClusterMapping");
	setSelectOptions(list,"serviceClusterMapping");
	setSelectOptions(list,"serviceDependency");
	setSelectOptions(list,"serviceMapDetail");
	setSelectOptions(list,"snapshot");
	setSelectOptions(list,"stage");
	setSelectOptions(list,"stateDefinition");
	setSelectOptions(list,"step");
	setSelectOptions(list,"task");
	setSelectOptions(list,"tierMap");
	setSelectOptions(list,"tierMapping");
	setSelectOptions(list,"transitionDefinition");
	setSelectOptions(list,"user");
	setSelectOptions(list,"widget");
	setSelectOptions(list,"widgetFilterOverride");
	setSelectOptions(list,"workflowDefinition");
	setSelectOptions(list,"workspace");
	setSelectOptions(list,"zone");
	setSelectOptions(list,"abortAllJobs");
	setSelectOptions(list,"abortAllPipelineRuns");
	setSelectOptions(list,"abortJob");
	setSelectOptions(list,"abortJobStep");
	setSelectOptions(list,"abortPipelineRun");
	setSelectOptions(list,"addComponentToApplicationTier");
	setSelectOptions(list,"addDependentsToArtifactVersion");
	setSelectOptions(list,"addResourcePoolToEnvironmentTier");
	setSelectOptions(list,"addResourceTemplateToEnvironmentTemplateTier");
	setSelectOptions(list,"addResourceToEnvironmentTemplateTier");
	setSelectOptions(list,"addResourceToEnvironmentTier");
	setSelectOptions(list,"addResourcesToEnvironmentTier");
	setSelectOptions(list,"addResourcesToPool");
	setSelectOptions(list,"addUsersToGroup");
	setSelectOptions(list,"attachCredential");
	setSelectOptions(list,"attachParameter");
	setSelectOptions(list,"breakAclInheritance");
	setSelectOptions(list,"changeOwner");
	setSelectOptions(list,"checkAccess");
	setSelectOptions(list,"cleanupArtifactCache");
	setSelectOptions(list,"cleanupRepository");
	setSelectOptions(list,"clone");
	setSelectOptions(list,"completeJob");
	setSelectOptions(list,"completeJobStep");
	setSelectOptions(list,"completeManualProcessStep");
	setSelectOptions(list,"completeManualTask");
	setSelectOptions(list,"completeRelease");
	setSelectOptions(list,"completeWorkflow");
	setSelectOptions(list,"copyComponent");
	setSelectOptions(list,"createAclEntry");
	setSelectOptions(list,"createActualParameter");
	setSelectOptions(list,"createApplication");
	setSelectOptions(list,"createApplicationDependency");
	setSelectOptions(list,"createApplicationFromDeploymentPackage");
	setSelectOptions(list,"createApplicationServiceMapping");
	setSelectOptions(list,"createApplicationTier");
	setSelectOptions(list,"createArtifact");
	setSelectOptions(list,"createArtifactVersion");
	setSelectOptions(list,"createCatalog");
	setSelectOptions(list,"createCatalogItem");
	setSelectOptions(list,"createCluster");
	setSelectOptions(list,"createComponent");
	setSelectOptions(list,"createContainer");
	setSelectOptions(list,"createCredential");
	setSelectOptions(list,"createDashboard");
	setSelectOptions(list,"createDeployerApplication");
	setSelectOptions(list,"createDeployerConfiguration");
	setSelectOptions(list,"createDeployerService");
	setSelectOptions(list,"createDirectoryProvider");
	setSelectOptions(list,"createEmailConfig");
	setSelectOptions(list,"createEmailNotifier");
	setSelectOptions(list,"createEnvironment");
	setSelectOptions(list,"createEnvironmentInventoryItem");
	setSelectOptions(list,"createEnvironmentMap");
	setSelectOptions(list,"createEnvironmentTemplate");
	setSelectOptions(list,"createEnvironmentTemplateTier");
	setSelectOptions(list,"createEnvironmentTemplateTierMap");
	setSelectOptions(list,"createEnvironmentTemplateTierMapping");
	setSelectOptions(list,"createEnvironmentTier");
	setSelectOptions(list,"createEnvironmentVariable");
	setSelectOptions(list,"createEventSubscription");
	setSelectOptions(list,"createFormalParameter");
	setSelectOptions(list,"createGate");
	setSelectOptions(list,"createGateway");
	setSelectOptions(list,"createGroup");
	setSelectOptions(list,"createHook");
	setSelectOptions(list,"createJob");
	setSelectOptions(list,"createJobStep");
	setSelectOptions(list,"createNote");
	setSelectOptions(list,"createPipeline");
	setSelectOptions(list,"createPort");
	setSelectOptions(list,"createProcedure");
	setSelectOptions(list,"createProcess");
	setSelectOptions(list,"createProcessDependency");
	setSelectOptions(list,"createProcessStep");
	setSelectOptions(list,"createProject");
	setSelectOptions(list,"createProperty");
	setSelectOptions(list,"createRelease");
	setSelectOptions(list,"createReport");
	setSelectOptions(list,"createReportObjectAssociation");
	setSelectOptions(list,"createReportObjectAttribute");
	setSelectOptions(list,"createReportObjectType");
	setSelectOptions(list,"createReportingFilter");
	setSelectOptions(list,"createRepository");
	setSelectOptions(list,"createReservation");
	setSelectOptions(list,"createResource");
	setSelectOptions(list,"createResourcePool");
	setSelectOptions(list,"createResourceTemplate");
	setSelectOptions(list,"createRollingDeployPhase");
	setSelectOptions(list,"createSchedule");
	setSelectOptions(list,"createService");
	setSelectOptions(list,"createServiceClusterMapping");
	setSelectOptions(list,"createServiceDependency");
	setSelectOptions(list,"createServiceMapDetail");
	setSelectOptions(list,"createSnapshot");
	setSelectOptions(list,"createStage");
	setSelectOptions(list,"createStateDefinition");
	setSelectOptions(list,"createStep");
	setSelectOptions(list,"createTask");
	setSelectOptions(list,"createTaskGroup");
	setSelectOptions(list,"createTierMap");
	setSelectOptions(list,"createTierMapping");
	setSelectOptions(list,"createTransitionDefinition");
	setSelectOptions(list,"createUser");
	setSelectOptions(list,"createWidget");
	setSelectOptions(list,"createWidgetFilterOverride");
	setSelectOptions(list,"createWorkflowDefinition");
	setSelectOptions(list,"createWorkspace");
	setSelectOptions(list,"createZone");
	setSelectOptions(list,"deleteAclEntry");
	setSelectOptions(list,"deleteActualParameter");
	setSelectOptions(list,"deleteApplication");
	setSelectOptions(list,"deleteApplicationDependency");
	setSelectOptions(list,"deleteApplicationServiceMapping");
	setSelectOptions(list,"deleteApplicationTier");
	setSelectOptions(list,"deleteArtifact");
	setSelectOptions(list,"deleteArtifactVersion");
	setSelectOptions(list,"deleteCatalog");
	setSelectOptions(list,"deleteCatalogItem");
	setSelectOptions(list,"deleteCluster");
	setSelectOptions(list,"deleteComponent");
	setSelectOptions(list,"deleteContainer");
	setSelectOptions(list,"deleteCredential");
	setSelectOptions(list,"deleteDashboard");
	setSelectOptions(list,"deleteDirectoryProvider");
	setSelectOptions(list,"deleteEmailConfig");
	setSelectOptions(list,"deleteEmailNotifier");
	setSelectOptions(list,"deleteEnvironment");
	setSelectOptions(list,"deleteEnvironmentInventoryItem");
	setSelectOptions(list,"deleteEnvironmentMap");
	setSelectOptions(list,"deleteEnvironmentTemplate");
	setSelectOptions(list,"deleteEnvironmentTemplateTier");
	setSelectOptions(list,"deleteEnvironmentTemplateTierMap");
	setSelectOptions(list,"deleteEnvironmentTemplateTierMapping");
	setSelectOptions(list,"deleteEnvironmentTier");
	setSelectOptions(list,"deleteEnvironmentVariable");
	setSelectOptions(list,"deleteEventSubscription");
	setSelectOptions(list,"deleteFormalParameter");
	setSelectOptions(list,"deleteGate");
	setSelectOptions(list,"deleteGateway");
	setSelectOptions(list,"deleteGroup");
	setSelectOptions(list,"deleteHook");
	setSelectOptions(list,"deleteJob");
	setSelectOptions(list,"deleteLicense");
	setSelectOptions(list,"deleteNote");
	setSelectOptions(list,"deletePipeline");
	setSelectOptions(list,"deletePipelineRun");
	setSelectOptions(list,"deletePlugin");
	setSelectOptions(list,"deletePort");
	setSelectOptions(list,"deleteProcedure");
	setSelectOptions(list,"deleteProcess");
	setSelectOptions(list,"deleteProcessDependency");
	setSelectOptions(list,"deleteProcessStep");
	setSelectOptions(list,"deleteProject");
	setSelectOptions(list,"deleteProperty");
	setSelectOptions(list,"deleteRelease");
	setSelectOptions(list,"deleteReport");
	setSelectOptions(list,"deleteReportObjectAssociation");
	setSelectOptions(list,"deleteReportObjectAttribute");
	setSelectOptions(list,"deleteReportObjectType");
	setSelectOptions(list,"deleteReportingFilter");
	setSelectOptions(list,"deleteRepository");
	setSelectOptions(list,"deleteReservation");
	setSelectOptions(list,"deleteResource");
	setSelectOptions(list,"deleteResourcePool");
	setSelectOptions(list,"deleteResourceTemplate");
	setSelectOptions(list,"deleteRollingDeployPhase");
	setSelectOptions(list,"deleteSchedule");
	setSelectOptions(list,"deleteService");
	setSelectOptions(list,"deleteServiceClusterMapping");
	setSelectOptions(list,"deleteServiceDependency");
	setSelectOptions(list,"deleteServiceMapDetail");
	setSelectOptions(list,"deleteSnapshot");
	setSelectOptions(list,"deleteStage");
	setSelectOptions(list,"deleteStateDefinition");
	setSelectOptions(list,"deleteStep");
	setSelectOptions(list,"deleteTask");
	setSelectOptions(list,"deleteTierMap");
	setSelectOptions(list,"deleteTierMapping");
	setSelectOptions(list,"deleteTransitionDefinition");
	setSelectOptions(list,"deleteUser");
	setSelectOptions(list,"deleteWidget");
	setSelectOptions(list,"deleteWidgetFilterOverride");
	setSelectOptions(list,"deleteWorkflow");
	setSelectOptions(list,"deleteWorkflowDefinition");
	setSelectOptions(list,"deleteWorkspace");
	setSelectOptions(list,"deleteZone");
	setSelectOptions(list,"describeObject");
	setSelectOptions(list,"detachCredential");
	setSelectOptions(list,"detachParameter");
	setSelectOptions(list,"evalDsl");
	setSelectOptions(list,"evalScript");
	setSelectOptions(list,"expandString");
	setSelectOptions(list,"export");
	setSelectOptions(list,"exportPlugin");
	setSelectOptions(list,"generateDsl");
	setSelectOptions(list,"getAccess");
	setSelectOptions(list,"getAclEntry");
	setSelectOptions(list,"getActualParameter");
	setSelectOptions(list,"getActualParameters");
	setSelectOptions(list,"getAdminLicense");
	setSelectOptions(list,"getAllWaitingTasks");
	setSelectOptions(list,"getApplication");
	setSelectOptions(list,"getApplicationDependencies");
	setSelectOptions(list,"getApplicationServiceMapping");
	setSelectOptions(list,"getApplicationServiceMappings");
	setSelectOptions(list,"getApplicationTier");
	setSelectOptions(list,"getApplicationTiers");
	setSelectOptions(list,"getApplicationTiersInComponent");
	setSelectOptions(list,"getApplications");
	setSelectOptions(list,"getArtifact");
	setSelectOptions(list,"getArtifactVersion");
	setSelectOptions(list,"getArtifactVersions");
	setSelectOptions(list,"getArtifacts");
	setSelectOptions(list,"getAvailableResourcesForEnvironment");
	setSelectOptions(list,"getCatalog");
	setSelectOptions(list,"getCatalogItem");
	setSelectOptions(list,"getCatalogItems");
	setSelectOptions(list,"getCatalogs");
	setSelectOptions(list,"getCluster");
	setSelectOptions(list,"getClusters");
	setSelectOptions(list,"getComponent");
	setSelectOptions(list,"getComponents");
	setSelectOptions(list,"getComponentsInApplicationTier");
	setSelectOptions(list,"getContainer");
	setSelectOptions(list,"getContainers");
	setSelectOptions(list,"getCredential");
	setSelectOptions(list,"getCredentials");
	setSelectOptions(list,"getDashboard");
	setSelectOptions(list,"getDashboardVisualizations");
	setSelectOptions(list,"getDashboards");
	setSelectOptions(list,"getDatabaseConfiguration");
	setSelectOptions(list,"getDeployerApplication");
	setSelectOptions(list,"getDeployerApplications");
	setSelectOptions(list,"getDeployerConfiguration");
	setSelectOptions(list,"getDeployerConfigurations");
	setSelectOptions(list,"getDeployerService");
	setSelectOptions(list,"getDeployerServices");
	setSelectOptions(list,"getDeploymentHistoryItems");
	setSelectOptions(list,"getDevOpsInsightServerConfiguration");
	setSelectOptions(list,"getDirectoryProvider");
	setSelectOptions(list,"getDirectoryProviders");
	setSelectOptions(list,"getEmailConfig");
	setSelectOptions(list,"getEmailConfigs");
	setSelectOptions(list,"getEmailNotifier");
	setSelectOptions(list,"getEmailNotifiers");
	setSelectOptions(list,"getEntityChange");
	setSelectOptions(list,"getEntityChangeDetails");
	setSelectOptions(list,"getEnvironment");
	setSelectOptions(list,"getEnvironmentApplications");
	setSelectOptions(list,"getEnvironmentDeployments");
	setSelectOptions(list,"getEnvironmentInventory");
	setSelectOptions(list,"getEnvironmentInventoryItem");
	setSelectOptions(list,"getEnvironmentInventoryItems");
	setSelectOptions(list,"getEnvironmentMaps");
	setSelectOptions(list,"getEnvironmentTemplate");
	setSelectOptions(list,"getEnvironmentTemplateTier");
	setSelectOptions(list,"getEnvironmentTemplateTierMaps");
	setSelectOptions(list,"getEnvironmentTemplateTiers");
	setSelectOptions(list,"getEnvironmentTemplates");
	setSelectOptions(list,"getEnvironmentTier");
	setSelectOptions(list,"getEnvironmentTiers");
	setSelectOptions(list,"getEnvironmentVariable");
	setSelectOptions(list,"getEnvironmentVariables");
	setSelectOptions(list,"getEnvironments");
	setSelectOptions(list,"getEventSubscription");
	setSelectOptions(list,"getEventSubscriptions");
	setSelectOptions(list,"getFormalParameter");
	setSelectOptions(list,"getFormalParameters");
	setSelectOptions(list,"getFullCredential");
	setSelectOptions(list,"getGate");
	setSelectOptions(list,"getGateway");
	setSelectOptions(list,"getGateways");
	setSelectOptions(list,"getGroup");
	setSelectOptions(list,"getGroups");
	setSelectOptions(list,"getHook");
	setSelectOptions(list,"getHooks");
	setSelectOptions(list,"getJobDetails");
	setSelectOptions(list,"getJobInfo");
	setSelectOptions(list,"getJobNotes");
	setSelectOptions(list,"getJobStatus");
	setSelectOptions(list,"getJobStepDetails");
	setSelectOptions(list,"getJobStepStatus");
	setSelectOptions(list,"getJobSummary");
	setSelectOptions(list,"getJobs");
	setSelectOptions(list,"getJobsForSchedule");
	setSelectOptions(list,"getLicense");
	setSelectOptions(list,"getLicenseUsage");
	setSelectOptions(list,"getLicenses");
	setSelectOptions(list,"getManifest");
	setSelectOptions(list,"getNote");
	setSelectOptions(list,"getNotes");
	setSelectOptions(list,"getPartialApplicationRevision");
	setSelectOptions(list,"getPartialServiceRevision");
	setSelectOptions(list,"getPipeline");
	setSelectOptions(list,"getPipelineRuntimeDetails");
	setSelectOptions(list,"getPipelineRuntimes");
	setSelectOptions(list,"getPipelineStageRuntimeDeployerTasks");
	setSelectOptions(list,"getPipelineStageRuntimeTasks");
	setSelectOptions(list,"getPipelines");
	setSelectOptions(list,"getPlugin");
	setSelectOptions(list,"getPlugins");
	setSelectOptions(list,"getPort");
	setSelectOptions(list,"getPorts");
	setSelectOptions(list,"getProcedure");
	setSelectOptions(list,"getProcedures");
	setSelectOptions(list,"getProcess");
	setSelectOptions(list,"getProcessDependencies");
	setSelectOptions(list,"getProcessStep");
	setSelectOptions(list,"getProcessSteps");
	setSelectOptions(list,"getProcesses");
	setSelectOptions(list,"getProject");
	setSelectOptions(list,"getProjects");
	setSelectOptions(list,"getProperties");
	setSelectOptions(list,"getProperty");
	setSelectOptions(list,"getProvisionedEnvironments");
	setSelectOptions(list,"getRelease");
	setSelectOptions(list,"getReleaseInventory");
	setSelectOptions(list,"getReleaseTimelineDetails");
	setSelectOptions(list,"getReleases");
	setSelectOptions(list,"getReport");
	setSelectOptions(list,"getReportObjectAssociation");
	setSelectOptions(list,"getReportObjectAssociations");
	setSelectOptions(list,"getReportObjectAttribute");
	setSelectOptions(list,"getReportObjectAttributes");
	setSelectOptions(list,"getReportObjectType");
	setSelectOptions(list,"getReportObjectTypes");
	setSelectOptions(list,"getReportingFilter");
	setSelectOptions(list,"getReportingFilters");
	setSelectOptions(list,"getReports");
	setSelectOptions(list,"getRepositories");
	setSelectOptions(list,"getRepository");
	setSelectOptions(list,"getReservation");
	setSelectOptions(list,"getReservations");
	setSelectOptions(list,"getResource");
	setSelectOptions(list,"getResourcePool");
	setSelectOptions(list,"getResourcePools");
	setSelectOptions(list,"getResourcePoolsInEnvironmentTier");
	setSelectOptions(list,"getResourceTemplate");
	setSelectOptions(list,"getResourceTemplates");
	setSelectOptions(list,"getResourceTemplatesInEnvironmentTemplateTier");
	setSelectOptions(list,"getResourceUsage");
	setSelectOptions(list,"getResources");
	setSelectOptions(list,"getResourcesInEnvironmentTemplateTier");
	setSelectOptions(list,"getResourcesInEnvironmentTier");
	setSelectOptions(list,"getResourcesInPool");
	setSelectOptions(list,"getRetrievedArtifacts");
	setSelectOptions(list,"getRollingDeployPhase");
	setSelectOptions(list,"getRollingDeployPhases");
	setSelectOptions(list,"getRunSchedules");
	setSelectOptions(list,"getSchedule");
	setSelectOptions(list,"getSchedules");
	setSelectOptions(list,"getServerInfo");
	setSelectOptions(list,"getServerStatus");
	setSelectOptions(list,"getService");
	setSelectOptions(list,"getServiceClusterMapping");
	setSelectOptions(list,"getServiceClusterMappings");
	setSelectOptions(list,"getServiceDependencies");
	setSelectOptions(list,"getServiceDeploymentDetails");
	setSelectOptions(list,"getServiceMapDetail");
	setSelectOptions(list,"getServiceMapDetails");
	setSelectOptions(list,"getServices");
	setSelectOptions(list,"getSnapshot");
	setSelectOptions(list,"getSnapshotEnvironments");
	setSelectOptions(list,"getSnapshots");
	setSelectOptions(list,"getStage");
	setSelectOptions(list,"getStages");
	setSelectOptions(list,"getState");
	setSelectOptions(list,"getStateDefinition");
	setSelectOptions(list,"getStateDefinitions");
	setSelectOptions(list,"getStates");
	setSelectOptions(list,"getStep");
	setSelectOptions(list,"getSteps");
	setSelectOptions(list,"getTask");
	setSelectOptions(list,"getTasks");
	setSelectOptions(list,"getTierMaps");
	setSelectOptions(list,"getTransition");
	setSelectOptions(list,"getTransitionDefinition");
	setSelectOptions(list,"getTransitionDefinitions");
	setSelectOptions(list,"getTransitions");
	setSelectOptions(list,"getUser");
	setSelectOptions(list,"getUsers");
	setSelectOptions(list,"getVersions");
	setSelectOptions(list,"getWaitingTasks");
	setSelectOptions(list,"getWidget");
	setSelectOptions(list,"getWidgetFilterOverride");
	setSelectOptions(list,"getWidgetFilterOverrides");
	setSelectOptions(list,"getWidgets");
	setSelectOptions(list,"getWorkflow");
	setSelectOptions(list,"getWorkflowDefinition");
	setSelectOptions(list,"getWorkflowDefinitions");
	setSelectOptions(list,"getWorkflows");
	setSelectOptions(list,"getWorkspace");
	setSelectOptions(list,"getWorkspaces");
	setSelectOptions(list,"getZone");
	setSelectOptions(list,"getZones");
	setSelectOptions(list,"import");
	setSelectOptions(list,"importLicenseData");
	setSelectOptions(list,"incrementProperty");
	setSelectOptions(list,"installPlugin");
	setSelectOptions(list,"logStatistic");
	setSelectOptions(list,"login");
	setSelectOptions(list,"logout");
	setSelectOptions(list,"modifyAclEntry");
	setSelectOptions(list,"modifyActualParameter");
	setSelectOptions(list,"modifyApplication");
	setSelectOptions(list,"modifyApplicationDependency");
	setSelectOptions(list,"modifyApplicationServiceMapping");
	setSelectOptions(list,"modifyApplicationTier");
	setSelectOptions(list,"modifyArtifact");
	setSelectOptions(list,"modifyArtifactVersion");
	setSelectOptions(list,"modifyCatalog");
	setSelectOptions(list,"modifyCatalogItem");
	setSelectOptions(list,"modifyCluster");
	setSelectOptions(list,"modifyComponent");
	setSelectOptions(list,"modifyContainer");
	setSelectOptions(list,"modifyCredential");
	setSelectOptions(list,"modifyDashboard");
	setSelectOptions(list,"modifyDeployerApplication");
	setSelectOptions(list,"modifyDeployerConfiguration");
	setSelectOptions(list,"modifyDeployerService");
	setSelectOptions(list,"modifyDirectoryProvider");
	setSelectOptions(list,"modifyEmailConfig");
	setSelectOptions(list,"modifyEmailNotifier");
	setSelectOptions(list,"modifyEnvTemplTierResourceTemplMapping");
	setSelectOptions(list,"modifyEnvironment");
	setSelectOptions(list,"modifyEnvironmentInventoryItem");
	setSelectOptions(list,"modifyEnvironmentMap");
	setSelectOptions(list,"modifyEnvironmentTemplate");
	setSelectOptions(list,"modifyEnvironmentTemplateTier");
	setSelectOptions(list,"modifyEnvironmentTemplateTierMap");
	setSelectOptions(list,"modifyEnvironmentTemplateTierMapping");
	setSelectOptions(list,"modifyEnvironmentTier");
	setSelectOptions(list,"modifyEnvironmentVariable");
	setSelectOptions(list,"modifyEventSubscription");
	setSelectOptions(list,"modifyFormalParameter");
	setSelectOptions(list,"modifyGate");
	setSelectOptions(list,"modifyGateway");
	setSelectOptions(list,"modifyGroup");
	setSelectOptions(list,"modifyHook");
	setSelectOptions(list,"modifyJob");
	setSelectOptions(list,"modifyJobStep");
	setSelectOptions(list,"modifyNote");
	setSelectOptions(list,"modifyPipeline");
	setSelectOptions(list,"modifyPlugin");
	setSelectOptions(list,"modifyPort");
	setSelectOptions(list,"modifyProcedure");
	setSelectOptions(list,"modifyProcess");
	setSelectOptions(list,"modifyProcessDependency");
	setSelectOptions(list,"modifyProcessStep");
	setSelectOptions(list,"modifyProject");
	setSelectOptions(list,"modifyProperty");
	setSelectOptions(list,"modifyRelease");
	setSelectOptions(list,"modifyReport");
	setSelectOptions(list,"modifyReportObjectAssociation");
	setSelectOptions(list,"modifyReportObjectAttribute");
	setSelectOptions(list,"modifyReportObjectType");
	setSelectOptions(list,"modifyReportingFilter");
	setSelectOptions(list,"modifyRepository");
	setSelectOptions(list,"modifyReservation");
	setSelectOptions(list,"modifyResource");
	setSelectOptions(list,"modifyResourcePool");
	setSelectOptions(list,"modifyResourceTemplate");
	setSelectOptions(list,"modifyRollingDeployPhase");
	setSelectOptions(list,"modifySchedule");
	setSelectOptions(list,"modifyService");
	setSelectOptions(list,"modifyServiceClusterMapping");
	setSelectOptions(list,"modifyServiceDependency");
	setSelectOptions(list,"modifyServiceMapDetail");
	setSelectOptions(list,"modifySnapshot");
	setSelectOptions(list,"modifyStage");
	setSelectOptions(list,"modifyStateDefinition");
	setSelectOptions(list,"modifyStep");
	setSelectOptions(list,"modifyTask");
	setSelectOptions(list,"modifyTierMap");
	setSelectOptions(list,"modifyTierMapping");
	setSelectOptions(list,"modifyTransitionDefinition");
	setSelectOptions(list,"modifyUser");
	setSelectOptions(list,"modifyWidget");
	setSelectOptions(list,"modifyWidgetFilterOverride");
	setSelectOptions(list,"modifyWorkflowDefinition");
	setSelectOptions(list,"modifyWorkspace");
	setSelectOptions(list,"modifyZone");
	setSelectOptions(list,"moveDirectoryProvider");
	setSelectOptions(list,"moveJobs");
	setSelectOptions(list,"moveRepository");
	setSelectOptions(list,"moveStateDefinition");
	setSelectOptions(list,"moveStep");
	setSelectOptions(list,"moveTransitionDefinition");
	setSelectOptions(list,"pingAllResources");
	setSelectOptions(list,"pingResource");
	setSelectOptions(list,"promotePlugin");
	setSelectOptions(list,"provisionCluster");
	setSelectOptions(list,"provisionEnvironment");
	setSelectOptions(list,"provisionResourcePool");
	setSelectOptions(list,"pruneChangeHistory");
	setSelectOptions(list,"publishArtifactVersion");
	setSelectOptions(list,"removeComponentFromApplicationTier");
	setSelectOptions(list,"removeDependentsFromArtifactVersion");
	setSelectOptions(list,"removeDeployerApplication");
	setSelectOptions(list,"removeDeployerConfiguration");
	setSelectOptions(list,"removeDeployerService");
	setSelectOptions(list,"removeResourceFromEnvironmentTemplateTier");
	setSelectOptions(list,"removeResourceFromEnvironmentTier");
	setSelectOptions(list,"removeResourcePoolFromEnvironmentTier");
	setSelectOptions(list,"removeResourceTemplateFromEnvironmentTemplateTier");
	setSelectOptions(list,"removeResourcesFromEnvironmentTier");
	setSelectOptions(list,"removeResourcesFromPool");
	setSelectOptions(list,"removeTaskGroup");
	setSelectOptions(list,"removeUsersFromGroup");
	setSelectOptions(list,"restartPipelineRun");
	setSelectOptions(list,"restoreAclInheritance");
	setSelectOptions(list,"retrieveArtifactVersions");
	setSelectOptions(list,"retryProcessStep");
	setSelectOptions(list,"retryTask");
	setSelectOptions(list,"revert");
	setSelectOptions(list,"runDiscovery");
	setSelectOptions(list,"runPipeline");
	setSelectOptions(list,"runProcedure");
	setSelectOptions(list,"runProcess");
	setSelectOptions(list,"runReport");
	setSelectOptions(list,"runServiceProcess");
	setSelectOptions(list,"runWorkflow");
	setSelectOptions(list,"searchEntityChange");
	setSelectOptions(list,"seedEnvironmentInventory");
	setSelectOptions(list,"sendEmail");
	setSelectOptions(list,"sendReportingData");
	setSelectOptions(list,"setDatabaseConfiguration");
	setSelectOptions(list,"setDevOpsInsightServerConfiguration");
	setSelectOptions(list,"setJobName");
	setSelectOptions(list,"setProperty");
	setSelectOptions(list,"setTierResourcePhase");
	setSelectOptions(list,"shutdownServer");
	setSelectOptions(list,"startRelease");
	setSelectOptions(list,"tearDownEnvironment");
	setSelectOptions(list,"tearDownResource");
	setSelectOptions(list,"tearDownResourcePool");
	setSelectOptions(list,"testDirectoryProvider");
	setSelectOptions(list,"transitionWorkflow");
	setSelectOptions(list,"uninstallPlugin");
	setSelectOptions(list,"updateArtifactVersion");
	setSelectOptions(list,"validateDeployer");
	setSelectOptions(list,"validateServiceClusterMapping");

		
    var re = new RegExp(word.source, "g");
    for (var dir = -1; dir <= 1; dir += 2) {
      var line = cur.line, endLine = Math.min(Math.max(line + dir * range, editor.firstLine()), editor.lastLine()) + dir;
      for (; line != endLine; line += dir) {
        var text = editor.getLine(line), m;
        while (m = re.exec(text)) {
          if (line == cur.line && m[0] === curWord) continue;
          if ((!curWord || m[0].lastIndexOf(curWord, 0) == 0) && !Object.prototype.hasOwnProperty.call(seen, m[0])) {
            seen[m[0]] = true;
            list.push(m[0]);
          }
        }
      }
    }
    return {list: list, from: CodeMirror.Pos(cur.line, start), to: CodeMirror.Pos(cur.line, end)};
  });
});
